---
import ArticleHeader from "./ArticleHeader.astro";
import ArticleContent from "./ArticleContent.astro";
import ArticleRightRail from "./ArticleRightRail.astro";

import Paragraph from "./Paragraph.astro";
import Callout from "./Callout.astro";
import RelatedLink from "./RelatedLink.astro";
import Section from "./Section.astro";
import Image from "./Image.astro";
import UpNextLink from "./UpNextLink.astro";
import type { CollectionEntry } from "astro:content";
import type { BlogPost } from "../../types/post.d.ts";

interface Params {
  frontmatter: CollectionEntry<"blog">["data"];
  post: BlogPost;
}

const { frontmatter, post } = Astro.props as Params;
---

<section>
  <article
    class="page-width comp mntl-article--two-column-right-rail sc-ad-container beauty-article mntl-article"
  >
    <ArticleHeader
      title={frontmatter.title}
      description={frontmatter.description}
      category={frontmatter.category}
      date={frontmatter.date}
      author={frontmatter.author}
    />
    <ArticleContent image={frontmatter.image}>
      {/* MainImage */}
      <Fragment slot="intro">
        {
          post.intro.map((item) => {
            switch (item.tag) {
              case "Callout":
                return <Callout {...item.params} />;
              case "RelatedLink":
                return <RelatedLink {...item.params} />;
              default:
                return <Paragraph {...item.params} />;
            }
          })
        }
      </Fragment>
      <Fragment slot="content">
        {
          post.content.map((section, index: number) => {
            return (
              <Section
                page={index + 1}
                pageTotal={post.content.length}
                title={section.title}
              >
                {section.data.map((item) => {
                  switch (item.tag) {
                    case "Callout":
                      return <Callout {...item.params} />;
                    case "Image":
                      return <Image {...item.params} />;
                    case "RelatedLink":
                      return <RelatedLink {...item.params} />;
                    default:
                      return <Paragraph {...item.params} />;
                  }
                })}
              </Section>
            );
          })
        }
      </Fragment>
      <Fragment slot="outro">
        <UpNextLink text={post.outro.params.text} />
      </Fragment>
    </ArticleContent>
    <ArticleRightRail />
  </article>
</section>

<style>
  /* article class="page-width comp mntl-article--two-column-right-rail sc-ad-container beauty-article mntl-article" */
  article {
    --page-width: 88rem;
  }

  .mntl-article {
    --article-width: 68rem;

    display: grid;
    position: relative;
    grid-template-columns: minmax(0, var(--article-width));
    grid-template-areas:
      "header"
      "content";
  }

  .mntl-article {
    margin-top: 1.5rem;
    column-gap: 0;
  }

  @media screen and (min-width: 750px) {
    .mntl-article--two-column-right-rail {
      grid-template-columns: minmax(0, var(--article-width)) calc(
          var(--page-width) - var(--article-width)
        );
      grid-template-areas:
        "header header"
        "content right-rail";
      column-gap: 5rem;
    }
  }
</style>
